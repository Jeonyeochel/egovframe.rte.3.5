<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">

	<!--resource가 DB일 경우 xml에 등록 -->
	<job id="jdbcCursorIoJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="jdbcCursorIoStep1">
			<tasklet>
				<chunk reader="itemReaderDB" processor="itemProcessor" writer="itemWriterDB"
					commit-interval="2" />
			</tasklet>
		</step>
	</job>

	<!--resource가 파일일 경우 xml에 등록 또는 JobParameter에 등록 -->
	<job id="delimitedIoJob" xmlns="http://www.springframework.org/schema/batch"> 
		<step id="delimitedIostep1">
		  <tasklet> 
		    <chunk reader="itemReaderFile" processor="itemProcessor" writer="itemWriterFile" commit-interval="2"/> 
		  </tasklet>
		</step> 
	</job> 

	<bean id="itemProcessor" class="egovframework.brte.sample.common.domain.trade.CustomerCreditIncreaseProcessor" />

	<bean id="itemReaderDB" class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<property name="dataSource" ref="dataSource" />
		<property name="sql" value="select ID, NAME, CREDIT from CUSTOMER" />
		<property name="verifyCursorPosition" value="true" />
		<property name="rowMapper">
			<bean class="egovframework.brte.sample.common.domain.trade.CustomerCreditRowMapper" />
		</property>
	</bean>

	<bean id="itemWriterDB" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="assertUpdates" value="true" />
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
		<property name="sql" value="UPDATE CUSTOMER set credit = :credit where id = :id" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="itemReaderFile" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value="," />
						<property name="names" value="name,credit" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="targetType" value="egovframework.brte.sample.common.domain.trade.CustomerCredit" />
					</bean>
				</property>
			</bean>
		</property>
		<property name="resource" value="#{jobParameters[inputFile]}" />
	</bean>

	<bean id="itemWriterFile" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="resource" value="file:./target/test-outputs/delimitedOutput.csv" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="name,credit" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
</beans>