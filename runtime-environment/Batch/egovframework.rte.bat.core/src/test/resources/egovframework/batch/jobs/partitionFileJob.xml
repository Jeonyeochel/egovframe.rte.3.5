<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">

	<job id="partitionJob" restartable="true" xmlns="http://www.springframework.org/schema/batch">
		<step id="step">
			<partition step="step1" partitioner="partitioner">
				<handler grid-size="4" task-executor="taskExecutor" />
			</partition>
		</step>
	</job>

	<bean id="partitioner" class="org.springframework.batch.core.partition.support.MultiResourcePartitioner">
		<property name="resources" value="classpath:egovframework/data/input/delimited*.csv" />
	</bean>

	<bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" />

	<step id="step1" xmlns="http://www.springframework.org/schema/batch">
		<tasklet transaction-manager="transactionManager">
			<chunk writer="itemWriter" reader="itemReader" commit-interval="5" />
			<listeners>
				<listener ref="fileNameListener" />
			</listeners>
		</tasklet>
	</step>

	<bean id="fileNameListener" class="egovframework.rte.bat.core.listener.EgovOutputFileListener" scope="step">
		<property name="path" value="file:./target/test-outputs/partition/file/" />
	</bean>

	<bean id="itemReader" scope="step" autowire-candidate="false" parent="itemReaderParent">
		<property name="resource" value="#{stepExecutionContext[fileName]}" />
	</bean>

	<bean id="inputTestReader" class="org.springframework.batch.item.file.MultiResourceItemReader">
		<property value="file:/egovframework/data/input/delimited*.csv" name="resources" />
		<property name="delegate" ref="testItemReader" />
	</bean>

	<bean id="outputTestReader" class="org.springframework.batch.item.file.MultiResourceItemReader" scope="prototype">
		<property value="file:/egovframework/data/input/delimited*.csv" name="resources" />
		<property name="delegate" ref="testItemReader" />
	</bean>

	<bean id="testItemReader" parent="itemReaderParent" />

	<bean id="itemReaderParent" class="org.springframework.batch.item.file.FlatFileItemReader" abstract="true">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="delimiter" value="," />
						<property name="names" value="name,credit" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="targetType" value="egovframework.brte.sample.common.domain.trade.CustomerCredit" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="itemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property value="#{stepExecutionContext[outputFile]}" name="resource" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property value="," name="delimiter" />
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property value="name,credit" name="names" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

</beans>
